conditional-operations.delegable=equals, not-equals, lo-than, loeq-than, hi-than, hieq-than, in-keyword, between
conditional-operations.nondelegable=match-regexp,not-match-regexp
transformation-operations.delegable=constant, concat, abs
transformation-operations.nondelegable=apply-function

#Operation description
operation.equals.name=equals
operation.equals.description=returns true if two values are equivalent
operation.equals.nargs=2
operation.equals.delegable=yes
operation.equals.delegated.db==
operation.equals.infix.db=yes
operation.equals.delegated.engine===
operation.equals.infix.engine=yes
operation.equals.arg.1=value1
operation.equals.arg.2=value2

operation.not-equals.name=not-equals

operation.lo-than.name=lo-than
operation.lo-than.description=returns true if 'value1' is lower than 'value1'
operation.lo-than.nargs=2
operation.lo-than.delegable=yes
operation.lo-than.delegated.db=<
operation.lo-than.infix.db=yes
operation.lo-than.delegated.engine=<
operation.lo-than.infix.engine=yes
operation.lo-than.arg.1=value1
operation.lo-than.arg.2=value2

operation.loeq-than.name=loeq-than
operation.loeq-than.description=returns true if 'value1' is lower or equal than 'value1'
operation.loeq-than.nargs=2
operation.loeq-than.delegable=yes
operation.loeq-than.delegated.db=<=
operation.loeq-than.infix.db=yes
operation.loeq-than.delegated.engine=<=
operation.loeq-than.infix.engine=yes
operation.loeq-than.arg.1=value1
operation.loeq-than.arg.2=value2

operation.concat.name=concat
operation.concat.description=concatenates two string elements
operation.concat.nargs=2
operation.concat.delegable=yes
operation.concat.delegated.db=concat
operation.concat.infix.db=no
operation.concat.delegated.engine=concat
operation.concat.infix.engine=no
operation.concat.arg.1=string1
operation.concat.arg.2=string2

operation.hi-than.name=hi-than
operation.hi-than.description=returns true if 'value1' is higher than 'value1'
operation.hi-than.nargs=2
operation.hi-than.delegable=yes
operation.hi-than.delegated.db=>
operation.hi-than.infix.db=yes
operation.hi-than.delegated.engine=>
operation.hi-than.infix.engine=yes
operation.hi-than.arg.1=value1
operation.hi-than.arg.2=value2

operation.hieq-than.name=hieq-than
operation.hieq-than.description=returns true if 'value1' is higher or equal than 'value1'
operation.hieq-than.nargs=2
operation.hieq-than.delegable=yes
operation.hieq-than.delegated.db=>=
operation.hieq-than.infix.db=yes
operation.hieq-than.delegated.engine=>=
operation.hieq-than.infix.engine=yes
operation.hieq-than.arg.1=value1
operation.hieq-than.arg.2=value2

operation.between.name=between
operation.between.description=returns true if the first argument is between the second and the third arguments.
operation.between.nargs=3
operation.between.delegable=yes
operation.between.delegated.db=BETWEEN
operation.between.infix.db=yes
operation.between.delegated.engine=BETWEEN
operation.between.infix.engine=yes
operation.between.arg.1=value1
operation.between.arg.2=value2
operation.between.arg.3=value3









operation.get-delimited.name=get-delimited
operation.get-delimited.description=extracts 'length' characters of 'string' starting from 'start-delim'
operation.get-delimited.nargs=3
operation.get-delimited.delegable=yes
operation.get-delimited.delegated.db=substring
operation.get-delimited.infix.db=no
operation.get-delimited.delegated.engine=getSubstring
operation.get-delimited.infix.engine=no
operation.get-delimited.arg.1=string
operation.get-delimited.arg.2=start-delim
operation.get-delimited.arg.3=length

operation.in-keyword.name=in-keyword
operation.in-keyword.description=returns true if 'keyword' is a substring of 'string'
operation.in-keyword.nargs=2
operation.in-keyword.delegable=yes
operation.in-keyword.delegated.db=0 < locate
operation.in-keyword.infix.db=no
operation.in-keyword.delegated.engine=inKeyword
operation.in-keyword.infix.engine=no
operation.in-keyword.arg.1=keyword
operation.in-keyword.arg.2=string

operation.constant.name=constant
operation.constant.description=returns the value of 'const-val' unchanged
operation.constant.nargs=1
operation.constant.delegable=yes
operation.constant.delegated.db=%EMPTY%
operation.constant.infix.db=no
operation.constant.delegated.engine=constant
operation.constant.infix.engine=no
operation.constant.arg.1=const-val

operation.plus.name=plus
operation.plus.description=returns 'value1' plus 'value1'
operation.plus.nargs=2
operation.plus.delegable=yes
operation.plus.delegated.db=+
operation.plus.infix.db=yes
operation.plus.delegated.engine=+
operation.plus.infix.engine=yes
operation.plus.arg.1=value1
operation.plus.arg.2=value2

operation.minus.name=minus
operation.minus.description=returns 'value1' minus 'value1'
operation.minus.nargs=2
operation.minus.delegable=yes
operation.minus.delegated.db=-
operation.minus.infix.db=yes
operation.minus.delegated.engine=-
operation.minus.infix.engine=yes
operation.minus.arg.1=value1
operation.minus.arg.2=value2

operation.multiply.name=multiply
operation.multiply.description=returns 'value1' by 'value1'
operation.multiply.nargs=2
operation.multiply.delegable=yes
operation.multiply.delegated.db=*
operation.multiply.infix.db=yes
operation.multiply.delegated.engine=*
operation.multiply.infix.engine=yes
operation.multiply.arg.1=value1
operation.multiply.arg.2=value2

operation.divide.name=divide
operation.divide.description=returns 'value1' divided by 'value1'
operation.divide.nargs=2
operation.divide.delegable=yes
operation.divide.delegated.db=/
operation.divide.infix.db=yes
operation.divide.delegated.engine=/
operation.divide.infix.engine=yes
operation.divide.arg.1=value1
operation.divide.arg.2=value2

operation.mod.name=mod
operation.mod.description=returns 'value1' mod 'value1'
operation.mod.nargs=2
operation.mod.delegable=yes
operation.mod.delegated.db=%
operation.mod.infix.db=yes
operation.mod.delegated.engine=%
operation.mod.infix.engine=yes
operation.mod.arg.1=value1
operation.mod.arg.2=value2

operation.apply-regexp.name=apply-regexp
operation.apply-regexp.description=returns pattern applied to parenthesis of 'regexp' if it matches 'pattern'
operation.apply-regexp.nargs=3
operation.apply-regexp.delegable=no
operation.apply-regexp.delegated.engine=applyRegExp
operation.apply-regexp.infix.engine=no
operation.apply-regexp.arg.1=string
operation.apply-regexp.arg.2=regexp
operation.apply-regexp.arg.3=pattern
	
operation.match-regexp.name=match-regexp
operation.match-regexp.description=returns true if 'regexp' matches 'pattern'
operation.match-regexp.nargs=2
operation.match-regexp.delegable=no
operation.match-regexp.delegated.engine=matchRegExp
operation.match-regexp.infix.engine=no
operation.match-regexp.arg.1=string
operation.match-regexp.arg.2=regexp

operation.replace.name=replace
operation.replace.description=returns 'value' with every occurrence of 'pattern' replaced by 'replacement'. Mode can be EQUALITY or MATCH and null value is represented as @@null@@ 
operation.replace.nargs=4
operation.replace.delegable=no
operation.replace.delegated.engine=Replace
operation.replace.infix.engine=no
operation.replace.arg.1=value
operation.replace.arg.2=mode
operation.replace.arg.3=pattern
operation.replace.arg.4=replacement


#Not included in first version	
#	public static final String R2O_OPERATION_DATE_AFTER = "date-after";
	
	
